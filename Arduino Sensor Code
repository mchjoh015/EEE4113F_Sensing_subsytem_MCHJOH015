#include <ESP32Servo.h>  // Servo library

// Pin definitions
const int SERVO_PIN = 12;  // Servo signal pin
const int TRIG_PIN = 14;   // HC-SR04 Trig pin
const int ECHO_PIN = 27;   // HC-SR04 Echo pin

Servo myServo;  // Create servo object

void setup() {
  Serial.begin(115200);
  myServo.attach(SERVO_PIN);
  
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
}

void loop() {
  // Sweep from 0 to 180 degrees
  for (int angle = 0; angle <= 180; angle++) {
    myServo.write(angle);
    delay(15);  // Small delay for smooth movement

    long distance = measureDistance();  // Measure the distance
    Serial.print(angle);
    Serial.print(",");
    Serial.print(distance);
    Serial.println(".");
  }
  
  // Sweep back from 180 to 0 degrees
  for (int angle = 180; angle >= 0; angle--) {
    myServo.write(angle);
    delay(15);

    long distance = measureDistance();
    Serial.print(angle);
    Serial.print(",");
    Serial.print(distance);
    Serial.println(".");
  }
}

// Function to measure distance using HC-SR04
long measureDistance() {
  // Clear trigger
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);

  // Set trigger HIGH for 10 microseconds
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  // Read echo
  long duration = pulseIn(ECHO_PIN, HIGH, 25000); // timeout after 25ms
  
  // Calculate distance in cm
  long distanceCm = duration * 0.0343 / 2;

  // If out of range (> 400 cm for HC-SR04), cap it
  if (distanceCm == 0 || distanceCm > 400) {
    distanceCm = 400; 
  }
  
  return distanceCm;
}

